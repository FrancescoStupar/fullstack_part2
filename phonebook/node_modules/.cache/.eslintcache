[{"/Users/fstupar/part2/phonebook/src/index.js":"1","/Users/fstupar/part2/phonebook/src/App.js":"2","/Users/fstupar/part2/phonebook/src/services/persons.js":"3"},{"size":123,"mtime":1643633973000,"results":"4","hashOfConfig":"5"},{"size":2647,"mtime":1643650654000,"results":"6","hashOfConfig":"5"},{"size":409,"mtime":1643644651000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1edz59c",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"/Users/fstupar/part2/phonebook/src/index.js",[],[],["21","22"],"/Users/fstupar/part2/phonebook/src/App.js",["23"],[],"import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport './app.css'\n\n\n\nconst Contact = ({data, removePerson}) => {\n  return(\n    <>\n    <li>{data.name} {data.number} <button onClick={() => removePerson(data.id)}>delete</button></li>\n    </>\n  )\n}  \n\nconst Notification = ({ errorMessage }) =>{\n  if (errorMessage == ''){\n     return(\n     <>\n     </> \n  )}\n  else return ( <h1 class = \"peppino\">{errorMessage}</h1>)\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState(\n  []) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n    personsService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  const removePerson = (id) => {\n    setErrorMessage(\n      `'${id}' was removed`\n    )\n    setTimeout(() => {\n      setErrorMessage('')\n    }, 1000)\n    personsService\n    .remove(id)\n    setPersons(persons.filter(person => person.id !== id))\n    \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    const currentPerson = persons.filter((person) => person.name === newName);\n    if (currentPerson.length === 1)\n    {\n      alert(\n          `${newName} is already added to phonebook, add anyway?`\n        )\n    }\n  personsService\n  .create(personObject)\n  .then(response => {\n    setPersons(persons.concat(response.data))\n    setErrorMessage(\n      `'${newName}' was added`\n    )\n    setTimeout(() => {\n      setErrorMessage('')\n    }, 1000)\n    setNewName('')\n    setNewNumber('')\n  })\n}\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n   \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification errorMessage={errorMessage} />\n      <form onSubmit={addPerson}>\n        name: <input\n          value={newName}\n          onChange={handleNameChange}\n        /> <br></br>\n        number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      \n      <button type=\"submit\">Add person</button>\n      </form>   \n      <h2>Numbers</h2>\n      <ul>\n        {persons.map((data,i) =>\n        <p>\n          <Contact key={i} data={data} removePerson={removePerson} /> \n        </p>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","/Users/fstupar/part2/phonebook/src/services/persons.js",["24"],[],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":16,"column":20,"nodeType":"33","messageId":"34","endLine":16,"endColumn":22},{"ruleId":"35","severity":1,"message":"36","line":20,"column":1,"nodeType":"37","endLine":20,"endColumn":50},{"ruleId":"27","replacedBy":"38"},{"ruleId":"29","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["40"],["41"],"no-global-assign","no-unsafe-negation"]